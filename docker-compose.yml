version: '3.9'

services:
  # ------------------------
  # Backend API (FastAPI)
  # ------------------------
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./code/backend/app:/app/app  # Hot reload for development
    depends_on:
      postgres:
        condition: service_healthy
      milvus:
        condition: service_started
    networks:
      - insightops-network
    restart: unless-stopped

  # ------------------------
  # Frontend (React/Next.js)
  # ------------------------
  frontend:
    build:
      context: ./code/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      - backend
    networks:
      - insightops-network
    restart: unless-stopped

  # ------------------------
  # PostgreSQL
  # ------------------------
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-insightops}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - insightops-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ------------------------
  # Milvus (with etcd + MinIO)
  # ------------------------
  milvus:
    image: milvusdb/milvus:v2.3.0
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - milvus_data:/var/lib/milvus
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - etcd
      - minio
    networks:
      - insightops-network
    restart: always

  etcd:
    image: quay.io/coreos/etcd:v3.5.5
    command: etcd -advertise-client-urls=http://etcd:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    volumes:
      - etcd_data:/etcd
    networks:
      - insightops-network
    restart: always

  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - insightops-network
    restart: always

# ------------------------
# Volumes + Network
# ------------------------
volumes:
  postgres_data:
  milvus_data:
  etcd_data:
  minio_data:

networks:
  insightops-network:
    driver: bridge
